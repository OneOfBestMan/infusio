<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <PropertyGroup>
        <GitSkipCache>true</GitSkipCache>
        <GitIgnoreTagVersion>true</GitIgnoreTagVersion>
        <GitSemVerDashLabel>-beta</GitSemVerDashLabel>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="GitInfo" Version="*" />
    </ItemGroup>

    <Target Name="Version" DependsOnTargets="SetVersion">
        <Message Importance="high" Text="PackageVersion=$(PackageVersion) AssemblyVersion=$(AssemblyVersion)"/>
    </Target>

    <Target Name="_SetLocalCommits" BeforeTargets="_GitPopulateVersionInfo" Condition="'$(CI)' != 'true'">
        <PropertyGroup>
            <!-- Local builds should always be commit count +1, since we'll be always working on the next version to be published. -->
            <GitCommits>$([MSBuild]::Add('$(GitCommits)', '1'))</GitCommits>
        </PropertyGroup>
    </Target>

    <!-- '$(ExcludeRestorePackageImports)' == 'true' when invoking /t:Restore -->
    <Target Name="SetVersion" BeforeTargets="GetAssemblyVersion;GetPackageVersion" DependsOnTargets="GitVersion" Condition="'$(ExcludeRestorePackageImports)' != 'true'">
        <PropertyGroup>
            <!-- CI checkouts may be against a specific commit, not a branch, so add -pr as label -->
            <GitSemVerDashLabel Condition="'$(GitBranch)' == 'undefined'">$(GitSemVerDashLabel)-pr</GitSemVerDashLabel>
            <!-- If there's no label, but we're not at the tip of the base version, add a -pre because this is not the base build -->
            <GitSemVerDashLabel Condition="'$(GitSemVerDashLabel)' == '' And '$(GitCommits)' != '0'">-pre</GitSemVerDashLabel>
            <PackageVersion Condition="'$(GitSemVerDashLabel)' == ''">$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)</PackageVersion>
            <PackageVersion Condition="'$(GitSemVerDashLabel)' != ''">$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)$(GitSemVerDashLabel).$(GitCommits)</PackageVersion>
            <AssemblyVersion>$(GitBaseVersionMajor).$(GitBaseVersionMinor).$(GitBaseVersionPatch)</AssemblyVersion>
        </PropertyGroup>
    </Target>

</Project>